import os
import sys
from sendgrid import SendGridAPIClient
from sendgrid.helpers.mail import Mail, Email, To, Content
import streamlit as st

def get_sendgrid_client():
    """Get SendGrid client with API key from environment"""
    api_key = os.getenv('SENDGRID_API_KEY')
    if not api_key:
        st.error("SendGrid API key not found in environment variables")
        return None
    return SendGridAPIClient(api_key)

def send_email(to_email, from_email, subject, text_content=None, html_content=None):
    """Send email using SendGrid"""
    sg = get_sendgrid_client()
    if not sg:
        return False
    
    try:
        message = Mail(
            from_email=Email(from_email),
            to_emails=To(to_email),
            subject=subject
        )
        
        if html_content:
            message.content = Content("text/html", html_content)
        elif text_content:
            message.content = Content("text/plain", text_content)
        else:
            st.error("No email content provided")
            return False
        
        response = sg.send(message)
        return response.status_code == 202
        
    except Exception as e:
        st.error(f"Failed to send email: {str(e)}")
        return False

def send_inventory_update_notification(to_email, inventory_data, action="created"):
    """Send inventory update notification"""
    from_email = os.getenv('FROM_EMAIL', 'noreply@inventory.com')
    
    subject = f"Inventory {action.title()}: {inventory_data.get('drug_item_name', 'Item')}"
    
    html_content = f"""
    <html>
    <body>
        <h2>Inventory {action.title()}</h2>
        <p>An inventory item has been {action}:</p>
        
        <table border="1" cellpadding="5" cellspacing="0">
            <tr><td><strong>Patient Name:</strong></td><td>{inventory_data.get('patient_name', 'N/A')}</td></tr>
            <tr><td><strong>Patient ID:</strong></td><td>{inventory_data.get('patient_id', 'N/A')}</td></tr>
            <tr><td><strong>Drug/Item Name:</strong></td><td>{inventory_data.get('drug_item_name', 'N/A')}</td></tr>
            <tr><td><strong>Inventory Number:</strong></td><td>{inventory_data.get('inventory_number', 'N/A')}</td></tr>
            <tr><td><strong>Date of Service:</strong></td><td>{inventory_data.get('date_of_service', 'N/A')}</td></tr>
            <tr><td><strong>Provider:</strong></td><td>{inventory_data.get('provider', 'N/A')}</td></tr>
            <tr><td><strong>Location:</strong></td><td>{inventory_data.get('location', 'N/A')}</td></tr>
        </table>
        
        <p>Updated by: {inventory_data.get('updated_by', 'System')}</p>
        <p>Timestamp: {inventory_data.get('updated_at', 'Now')}</p>
    </body>
    </html>
    """
    
    text_content = f"""
    Inventory {action.title()}
    
    An inventory item has been {action}:
    
    Patient Name: {inventory_data.get('patient_name', 'N/A')}
    Patient ID: {inventory_data.get('patient_id', 'N/A')}
    Drug/Item Name: {inventory_data.get('drug_item_name', 'N/A')}
    Inventory Number: {inventory_data.get('inventory_number', 'N/A')}
    Date of Service: {inventory_data.get('date_of_service', 'N/A')}
    Provider: {inventory_data.get('provider', 'N/A')}
    Location: {inventory_data.get('location', 'N/A')}
    
    Updated by: {inventory_data.get('updated_by', 'System')}
    Timestamp: {inventory_data.get('updated_at', 'Now')}
    """
    
    return send_email(to_email, from_email, subject, text_content, html_content)

def send_report_email(to_email, report_data, attachment=None):
    """Send inventory report via email"""
    from_email = os.getenv('FROM_EMAIL', 'noreply@inventory.com')
    
    subject = f"Inventory Report - {report_data.get('report_type', 'General')}"
    
    html_content = f"""
    <html>
    <body>
        <h2>Inventory Report</h2>
        <p>Please find the inventory report below:</p>
        
        <h3>Report Summary:</h3>
        <ul>
            <li>Report Type: {report_data.get('report_type', 'General')}</li>
            <li>Generated On: {report_data.get('generated_on', 'Now')}</li>
            <li>Total Records: {report_data.get('total_records', 0)}</li>
            <li>Generated By: {report_data.get('generated_by', 'System')}</li>
        </ul>
        
        {f"<p>Report file attached: {attachment}</p>" if attachment else ""}
        
        <p>Thank you for using the Inventory Management System.</p>
    </body>
    </html>
    """
    
    text_content = f"""
    Inventory Report
    
    Report Summary:
    - Report Type: {report_data.get('report_type', 'General')}
    - Generated On: {report_data.get('generated_on', 'Now')}
    - Total Records: {report_data.get('total_records', 0)}
    - Generated By: {report_data.get('generated_by', 'System')}
    
    {f"Report file attached: {attachment}" if attachment else ""}
    
    Thank you for using the Inventory Management System.
    """
    
    return send_email(to_email, from_email, subject, text_content, html_content)
